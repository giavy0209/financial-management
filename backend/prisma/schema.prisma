// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int           @id @default(autoincrement())
  email       String        @unique
  password    String
  name        String?
  createdAt   DateTime      @default(now()) @map("created_at")
  updatedAt   DateTime      @updatedAt @map("updated_at")
  Category    Category[]
  MoneySource MoneySource[]

  @@map("users")
}

model Category {
  id          Int           @id @default(autoincrement())
  name        String
  userId      Int           @map("user_id")
  user        User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt   DateTime      @default(now()) @map("created_at")
  updatedAt   DateTime      @updatedAt @map("updated_at")
  transaction Transaction[]

  @@unique([userId, name])
  @@map("categories")
}

model MoneySource {
  id          Int           @id @default(autoincrement())
  name        String
  userId      Int           @map("user_id")
  user        User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt   DateTime      @default(now()) @map("created_at")
  updatedAt   DateTime      @updatedAt @map("updated_at")
  transaction Transaction[]

  @@unique([userId, name])
  @@map("money_sources")
}

model Transaction {
  id            Int      @id @default(autoincrement())
  amount        Float
  description   String?
  categoryId    Int      @map("category_id")
  userId        Int      @map("user_id")
  moneySourceId Int      @map("money_source_id")
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @updatedAt @map("updated_at")

  category    Category    @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  moneySource MoneySource @relation(fields: [moneySourceId], references: [id], onDelete: Cascade)

  @@map("transactions")
}
